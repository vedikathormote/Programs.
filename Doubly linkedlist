package linkkedlisst;

public class DLL {
	
	Node head;
	Node tail;
	public void insertfirst(int val) {
	
		Node NN=new Node(val);
		NN.next=head;
		NN.prev=null;
		if(head!=null) {
	   head.prev=null;
		}
		head=NN;
		
	}
	
	public void display() {
		Node NN=head;
		
		while(NN!=null) {
			System.out.print(NN.val+"->");
			
			NN=NN.next;
			
		}
		
		System.out.println();
	   
	}
	
	public void reverse() {
		Node pointer=head;
		Node previous=null;
		Node current=null;
		while(pointer!=null){
			current=pointer;
			pointer=pointer.next;
			current.next=previous;
			previous=current;
			head=current;
		}
	}
	
	public class Node{
		int val;
		Node next;
		Node prev;
		//constructor
		public Node(int val) {
			this.val=val;
		}
		public Node(int val,Node next,Node prev) {
			this.val=val;
			this.next=next;
			this.prev=prev;
			
		}
		
	}
	public static void main(String[] args) {
		DLL list=new DLL();
		list.insertfirst(30);
		list.insertfirst(25);
		list.insertfirst(45);
		list.insertfirst(65);
		list.display();
		list.reverse();
		list.display();
		

	}
}
